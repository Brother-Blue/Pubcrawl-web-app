{
	"info": {
		"_postman_id": "d411a3b6-8ec7-48a6-baa8-a45a0a2b279e",
		"name": "g20-pubcrawl",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create-test-entities",
			"item": [
				{
					"name": "add-test-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac91404b-4029-4cc0-9838-ce7b284708ff",
								"exec": [
									"pm.test(\"Successfully add user\", function() {",
									"    pm.expect(pm.response).to.be.status(201);",
									"    const response = pm.response.json();",
									"    pm.globals.set(\"test-user-id\", response._id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser123\",\n    \"password\": \"password1234\",\n    \"email\": \"test@pubcrawl.se\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-test-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c58959c-e873-45f7-a030-9817f5153d76",
								"exec": [
									"pm.test(\"Successfully add bar\", function() {\r",
									"    pm.expect(pm.response).to.be.status(201);\r",
									"    const response = pm.response.json();\r",
									"    pm.globals.set(\"test-bar-id\", response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ZZtest-bar-123\",\r\n    \"latLong\": [12.345, 54.321]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/bars",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-test-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aa50b331-bffc-47ed-9008-aa4982cce1da",
								"exec": [
									"pm.test(\"Add a test review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(201);\r",
									"    pm.expect(response.drinkQuality).to.eql(4);\r",
									"    pm.expect(response.comment).to.be.a('String');\r",
									"    pm.globals.set('test-review-id', response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"users\": \"{{test-user-id}}\",\r\n    \"bars\": \"{{test-bar-id}}\",\r\n    \"drinkQuality\": 4,\r\n    \"drinkPrice\": 4,\r\n    \"comment\": \"This comment is just a test comment. Nothing fancy. Chris O'Neill is pretty cool.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-new-event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "358c3e12-1b53-4697-aa6b-8496bb261e34",
								"exec": [
									"pm.test(\"Successfully add user\", function() {\r",
									"    pm.expect(pm.response).to.be.status(201);\r",
									"    const response = pm.response.json();\r",
									"    pm.globals.set(\"test-event-id\", response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"users\": \"{{test-user-id}}\",\r\n    \"bars\": [\"{{test-bar-id}}\"],\r\n    \"title\": \"Get together at Test Bar 123\",\r\n    \"startDate\": \"2020-10-09T20:00:00\",\r\n    \"endDate\": \"2020-10-18T01:00:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/events",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all-users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6bdd82cb-f15c-4334-9db9-b6ba835a6b07",
								"exec": [
									"pm.test(\"Get all users\", function() {",
									"    pm.expect(pm.response).to.have.status(200);",
									"});",
									"",
									"pm.test(\"Get all users under 150ms\", function() {",
									"    pm.expect(pm.response.responseTime).to.be.below(150);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-test-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "26dca093-1a06-4337-b73d-11c6332f1b7c",
								"exec": [
									"pm.test(\"Get test user\", function() {",
									"    const response = pm.response.json();",
									"    pm.expect(pm.response).to.have.status(200);",
									"    pm.expect(pm.response.responseTime).to.be.below(100);",
									"    pm.expect(response.username).to.eql('testuser123');",
									"    pm.expect(response.email).to.eql('test@pubcrawl.se');",
									"    pm.expect(response.isVerified).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{test-user-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{test-user-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all-bars",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "def06211-a1c9-4b5a-8b21-87ea1e809f22",
								"exec": [
									"pm.test(\"Get all bars\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-test-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5cd5aaa9-28ee-4320-ac9b-57092639c9b0",
								"exec": [
									"pm.test(\"Get bar by ID\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response.name).to.eql('ZZtest-bar-123');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all-reviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "573a46f8-0929-42d2-9dab-f3febd0d6fd5",
								"exec": [
									"pm.test(\"Get all reviews\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-test-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "32c3b60c-3e62-4322-af61-dd48ca849be2",
								"exec": [
									"pm.test(\"Get review by id\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response.drinkQuality).to.be.a('Number');\r",
									"    pm.expect(response.drinkPrice).to.eql(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-review-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-review-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-review-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "129a0fd5-7fca-43c7-be75-efaaa136ae5f",
								"exec": [
									"pm.test(\"Get user that posted review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response._id).to.eql(pm.globals.get('test-user-id'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-review-id}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-review-id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-review-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2c2aaff2-2fdd-4a02-964a-5a2a2f74f926",
								"exec": [
									"pm.test(\"Get user that posted review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response._id).to.eql(pm.globals.get('test-bar-id'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-review-id}}/bars",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-review-id}}",
								"bars"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all-events",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e564f5c-2f20-4938-aecb-4ae868787502",
								"exec": [
									"pm.test(\"Get all events\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/events",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-test-event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "28b8b4d1-38e2-4047-b7ae-2542b1c1d9f0",
								"exec": [
									"pm.test(\"Successfully add user\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.be.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/events/{{test-event-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"{{test-event-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-test-event-bars",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6e866d8-dc69-4350-b3d3-225521b15bcd",
								"exec": [
									"pm.test(\"Get all bars for event\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/events/{{test-event-id}}/bars",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"{{test-event-id}}",
								"bars"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-test-event-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "23d68274-31ab-4c1d-a0f1-6d6f4aff5a85",
								"exec": [
									"pm.test(\"Get user that posted the event\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response._id).to.eql(pm.globals.get('test-user-id'));\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/events/{{test-event-id}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"{{test-event-id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-low-review-through-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "41bd00ab-84bf-4989-b432-bb7f8ab7ad6a",
								"exec": [
									"pm.test(\"Create low rating review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(201);\r",
									"    pm.globals.set('test-low-review', response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"users\": \"{{test-user-id}}\",\r\n    \"bars\": \"{{test-bar-id}}\",\r\n    \"drinkQuality\": 1,\r\n    \"drinkPrice\": 1,\r\n    \"atmosphere\": 3,\r\n    \"comment\": \"I'm angry and give this bar low reviews. >:(\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-avg-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "11bb6a30-f935-4a7f-bddd-c8ac75c4057d",
								"exec": [
									"pm.test(\"Create mid rating review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(201);\r",
									"    pm.globals.set('test-mid-review', response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"users\": \"{{test-user-id}}\",\r\n    \"bars\": \"{{test-bar-id}}\",\r\n    \"drinkQuality\": 3,\r\n    \"drinkPrice\": 4,\r\n    \"atmosphere\": 3,\r\n    \"foodQuality\": 3,\r\n    \"comment\": \"I enjoyed my time here, nice and chill.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-high-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3fee96a9-678d-4928-8156-a58d6800c7b2",
								"exec": [
									"pm.test(\"Create high rating review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(201);\r",
									"    pm.globals.set('test-high-review', response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"users\": \"{{test-user-id}}\",\r\n    \"bars\": \"{{test-bar-id}}\",\r\n    \"drinkQuality\": 5,\r\n    \"drinkPrice\": 5,\r\n    \"atmosphere\": 4,\r\n    \"foodQuality\": 4,\r\n    \"comment\": \"Practically got free stuff when I told them I was American and would sing any song. 10/10\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "filter-and-sort-reviews",
			"item": [
				{
					"name": "filter-by-name-asc",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bcb869c6-72ed-444c-b2cd-1fc3accf487c",
								"exec": [
									"pm.test(\"Sort bars by name aA-zZ\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[response.length-1].name).to.eql('ZZtest-bar-123');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars?sortByName=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars"
							],
							"query": [
								{
									"key": "sortByName",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "filter-by-name-desc",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9827a2db-8b3b-481c-a4a7-4dd5c183a9e9",
								"exec": [
									"pm.test(\"Sort bars by name Zz-Aa\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0].name).to.eql('ZZtest-bar-123');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars?sortByName=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars"
							],
							"query": [
								{
									"key": "sortByName",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-drink-quality",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68a8601d-275a-43c5-b335-e4b4e6e00258",
								"exec": [
									"pm.test(\"Get highest drink quality review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-high-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByDrinkQuality=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByDrinkQuality",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-drink-price",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "175f141a-32f7-44fa-9ae3-cef64816cb12",
								"exec": [
									"pm.test(\"Get highest drink price review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-high-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByDrinkPrice=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByDrinkPrice",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-food-quality",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a19b2526-7212-4881-a128-ff83b58bdb99",
								"exec": [
									"pm.test(\"Get highest food quality review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-high-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByFoodQuality=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByFoodQuality",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-atmosphere",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2d8e2e0-58eb-4cdd-aa70-99f4acff076e",
								"exec": [
									"pm.test(\"Get highest atmosphere review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-high-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByAtmosphere=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByAtmosphere",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-average-rating",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "28bcc5bf-25d5-4bda-bdb0-3bf0d5c7d336",
								"exec": [
									"pm.test(\"Get highest average rating review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-high-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByAverageRating=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByAverageRating",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-drink-quality-lowest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c9774a53-0484-4e8a-b3b6-a109ac3652dc",
								"exec": [
									"pm.test(\"Get lowest drink quality review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-low-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByDrinkQuality=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByDrinkQuality",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-drink-price-lowest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "de7852d3-d87b-4d63-9689-4978c3530f0c",
								"exec": [
									"pm.test(\"Get lowest drink price review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-low-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByDrinkPrice=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByDrinkPrice",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-food-quality-lowest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c9965036-0c9e-4a2a-9a30-326517d32882",
								"exec": [
									"pm.test(\"Get lowest food quality review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-low-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByFoodQuality=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByFoodQuality",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-atmosphere-lowest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7d3fecb-f9b2-446b-a609-6e84c31423f3",
								"exec": [
									"pm.test(\"Get lowest atmosphere review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-low-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByAtmosphere=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByAtmosphere",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-average-rating-lowest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "62b27a9c-5158-47e0-a021-204d9bbeabef",
								"exec": [
									"pm.test(\"Get lowest average rating review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-low-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByAverageRating=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByAverageRating",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "filter-bar-by-partial-name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f9d7bcc4-cd28-423b-b9ff-796a19e9b61d",
								"exec": [
									"pm.test(\"Filter bar by partial name\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0].name).to.eql('ZZtest-bar-123');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars?name=123",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars"
							],
							"query": [
								{
									"key": "name",
									"value": "123"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "update-all-test-entities",
			"item": [
				{
					"name": "update-test-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08fd6627-730a-4e5b-ba4b-1ae9d7799791",
								"exec": [
									"pm.test(\"Update test user username\", function() {",
									"    pm.expect(pm.response).to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"new-username\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/{{test-user-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{test-user-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update-test-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d21611b7-d210-4734-a461-7833f578d492",
								"exec": [
									"pm.test(\"Update test bar\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"new-bar-123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update-test-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "60dfea94-284b-45d9-bcf2-893409e32759",
								"exec": [
									"pm.test(\"Update review\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"atmosphere\": 4,\r\n    \"foodQuality\": 5,\r\n    \"drinkPrice\": 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/reviews/{{test-review-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-review-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update-test-event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fe8e3740-c9f8-461a-a20f-09bf29800154",
								"exec": [
									"pm.test(\"Update test event\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Don't tell Dave!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/events/{{test-event-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"{{test-event-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "102113d2-2ae7-4981-85cf-c491530e74f3",
								"exec": [
									"pm.test(\"Put new password on user\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"isVerified\": false,\r\n    \"reviews\": [],\r\n    \"_id\": \"5f6c70112cea2e1fac80129a\",\r\n    \"username\": \"testuser123\",\r\n    \"password\": \"somethingelse\",\r\n    \"email\": \"test@pubcrawl.se\",\r\n    \"createdAt\": \"2020-09-24T10:08:17.250Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/{{test-user-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{test-user-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-updated-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ba9cf2d-73a6-4ff3-b493-fcf71859b62e",
								"exec": [
									"pm.test(\"Get test user\", function() {",
									"    const response = pm.response.json();",
									"    pm.expect(pm.response).to.have.status(200);",
									"    pm.expect(pm.response.responseTime).to.be.below(100);",
									"    pm.expect(response.username).to.eql('new-username');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{test-user-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{test-user-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-updated-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1efcd383-4873-46e6-aeb6-1e4148403675",
								"exec": [
									"pm.test(\"Get bar by ID\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response.name).to.eql('new-bar-123');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-updated-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec41d33d-8bcc-423c-b31e-6cd57217ad8c",
								"exec": [
									"pm.test(\"Get updated test review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response.atmosphere).to.eql(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-review-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-review-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-updated-event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56764cac-2a04-4e1d-8576-27e736e30ccf",
								"exec": [
									"pm.test(\"Get updated bar\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response.title).to.eql('Don\\'t tell Dave!');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/events/{{test-event-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"{{test-event-id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "cleanup",
			"item": [
				{
					"name": "delete-low-review-through-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "44e00476-f537-4a83-b32d-1554e0fafcd0",
								"exec": [
									"pm.test(\"Delete review through bar by id\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews/{{test-low-review}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews",
								"{{test-low-review}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-mid-review",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-mid-review}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-mid-review}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-high-review",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-high-review}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-high-review}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-test-event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "757dacf7-b2e2-46e9-8b21-4bc98e069300",
								"exec": [
									"pm.test(\"Delete test event\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/events/{{test-event-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"{{test-event-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-test-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "909f192d-aed8-4c96-bf7e-36e01b5c333d",
								"exec": [
									"pm.test(\"Delete test review\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-review-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-review-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-test-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4f0e107-6893-4bdf-9d85-960fccf84b08",
								"exec": [
									"pm.test(\"Delete test bar\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-test-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ac4c10e-5e02-4e17-86a4-3655be6c739f",
								"exec": [
									"pm.test(\"Delete test user\", function() {",
									"    pm.expect(pm.response).to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{test-user-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{test-user-id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ed337377-5211-4e31-ae2c-803346cb9650",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "75ced71b-a75a-4092-982b-a2156626e018",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "cd185905-a834-4211-8030-583d17702534",
			"key": "host",
			"value": "http://localhost:3000",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}