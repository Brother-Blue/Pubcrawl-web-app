{
	"info": {
		"_postman_id": "8271ffae-2a53-4f39-89b2-63f1d875c2b0",
		"name": "g20-pubcrawl",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create-test-entities",
			"item": [
				{
					"name": "add-test-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e8f382c-7f7d-4ff5-87d5-9bc155fbb147",
								"exec": [
									"pm.test(\"Successfully add user\", function() {",
									"    pm.expect(pm.response).to.be.status(201);",
									"    const response = pm.response.json();",
									"    pm.globals.set(\"test-user-id\", response._id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser123\",\n    \"password\": \"password1234\",\n    \"email\": \"test@pubcrawl.se\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "login-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cdeaa09-51e7-40b6-984a-6f072c4323fa",
								"exec": [
									"pm.test(\"Successfully add user\", function() {",
									"    pm.expect(pm.response).to.be.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser123\",\n    \"password\": \"password1234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-test-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aefda3b9-ca04-403a-bb69-0f0f0d684e74",
								"exec": [
									"pm.test(\"Successfully add bar\", function() {\r",
									"    pm.expect(pm.response).to.be.status(201);\r",
									"    const response = pm.response.json();\r",
									"    pm.globals.set(\"test-bar-id\", response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ÖÖtest-bar-123\",\r\n    \"latLong\": [12.345, 54.321]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/bars",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-test-bar2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d583425-9982-44a3-b677-48446cfc599f",
								"exec": [
									"pm.test(\"Successfully add bar2\", function() {\r",
									"    pm.expect(pm.response).to.be.status(201);\r",
									"    const response = pm.response.json();\r",
									"    pm.globals.set(\"test-bar-id2\", response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"00test-bar-123\",\r\n    \"latLong\": [12.345, 54.321]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/bars",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-test-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2fdedb08-a9ff-4259-bbb6-bacf7f95cae6",
								"exec": [
									"pm.test(\"Add a test review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(201);\r",
									"    pm.expect(response.drinkQuality).to.eql(4);\r",
									"    pm.expect(response.comment).to.be.a('String');\r",
									"    pm.globals.set('test-review-id', response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"users\": \"{{test-user-id}}\",\r\n    \"bars\": \"{{test-bar-id}}\",\r\n    \"drinkQuality\": 4,\r\n    \"drinkPrice\": 4,\r\n    \"comment\": \"This comment is just a test comment. Nothing fancy. Chris O'Neill is pretty cool.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-new-event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aa3ec0e7-fee7-46ad-8455-6cb5a8ee2c33",
								"exec": [
									"pm.test(\"Successfully add user\", function() {\r",
									"    pm.expect(pm.response).to.be.status(201);\r",
									"    const response = pm.response.json();\r",
									"    pm.globals.set(\"test-event-id\", response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"users\": \"{{test-user-id}}\",\r\n    \"bars\": [\"{{test-bar-id}}\"],\r\n    \"title\": \"Get together at Test Bar 123\",\r\n    \"startDate\": \"2020-10-09T20:00:00\",\r\n    \"endDate\": \"2020-10-18T01:00:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/events",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all-users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a50bf881-f013-4f1c-823a-a0a9d4d6d570",
								"exec": [
									"pm.test(\"Get all users\", function() {",
									"    pm.expect(pm.response).to.have.status(200);",
									"});",
									"",
									"pm.test(\"Get all users under 150ms\", function() {",
									"    pm.expect(pm.response.responseTime).to.be.below(150);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-test-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7f5a11c-887a-469b-baa6-02278b659e74",
								"exec": [
									"pm.test(\"Get test user\", function() {",
									"    const response = pm.response.json();",
									"    pm.expect(pm.response).to.have.status(200);",
									"    pm.expect(pm.response.responseTime).to.be.below(100);",
									"    pm.expect(response.username).to.eql('testuser123');",
									"    pm.expect(response.email).to.eql('test@pubcrawl.se');",
									"    pm.expect(response.isVerified).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{test-user-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{test-user-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all-bars",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a140ef7-3c85-47d4-93cd-db259060ddb9",
								"exec": [
									"pm.test(\"Get all bars\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-test-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50772f8d-0ae2-4a78-a407-cad65815eac5",
								"exec": [
									"pm.test(\"Get bar by ID\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response.name).to.eql('ÖÖtest-bar-123');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all-reviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "74b6e51e-49f3-4df4-93c1-fc96a903b16b",
								"exec": [
									"pm.test(\"Get all reviews\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-test-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "704b0281-bbfb-44eb-af0c-5672a56de1b8",
								"exec": [
									"pm.test(\"Get review by id\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response.drinkQuality).to.be.a('Number');\r",
									"    pm.expect(response.drinkPrice).to.eql(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-review-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-review-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-review-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "11e515b0-5d3d-4ffa-954b-6b6e369ae04a",
								"exec": [
									"pm.test(\"Get user that posted review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response._id).to.eql(pm.globals.get('test-user-id'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-review-id}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-review-id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-review-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1dfa2887-637b-46be-8cf6-4d130c8db1cc",
								"exec": [
									"pm.test(\"Get user that posted review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response._id).to.eql(pm.globals.get('test-bar-id'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-review-id}}/bars",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-review-id}}",
								"bars"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all-events",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c32730a8-9603-4a21-870b-ad7168f1295d",
								"exec": [
									"pm.test(\"Get all events\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/events",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-test-event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8725b8d2-4689-4c39-94e3-c67ee65dd866",
								"exec": [
									"pm.test(\"Successfully add user\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.be.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/events/{{test-event-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"{{test-event-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-test-event-bars",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c183b6f3-6f78-4f7a-bcaa-923632af38bc",
								"exec": [
									"pm.test(\"Get all bars for event\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-bar-id'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/events/{{test-event-id}}/bars",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"{{test-event-id}}",
								"bars"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-test-event-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "90ad1842-e394-4a2e-902d-d79e851281f1",
								"exec": [
									"pm.test(\"Get user that posted the event\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response._id).to.eql(pm.globals.get('test-user-id'));\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/events/{{test-event-id}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"{{test-event-id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-low-review-through-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b82a34a-cc36-4e43-bc89-3433a326e728",
								"exec": [
									"pm.test(\"Create low rating review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(201);\r",
									"    pm.globals.set('test-low-review', response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"users\": \"{{test-user-id}}\",\r\n    \"bars\": \"{{test-bar-id}}\",\r\n    \"drinkQuality\": 1,\r\n    \"drinkPrice\": 1,\r\n    \"atmosphere\": 3,\r\n    \"comment\": \"I'm angry and give this bar low reviews. >:(\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-avg-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1e77ac97-87a6-467e-ae0b-36c66afdaaf2",
								"exec": [
									"pm.test(\"Create mid rating review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(201);\r",
									"    pm.globals.set('test-mid-review', response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"users\": \"{{test-user-id}}\",\r\n    \"bars\": \"{{test-bar-id}}\",\r\n    \"drinkQuality\": 3,\r\n    \"drinkPrice\": 4,\r\n    \"atmosphere\": 3,\r\n    \"foodQuality\": 3,\r\n    \"comment\": \"I enjoyed my time here, nice and chill.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-high-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b21550b-5d3f-48cd-89e1-702fb09e0d3e",
								"exec": [
									"pm.test(\"Create high rating review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(201);\r",
									"    pm.globals.set('test-high-review', response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"users\": \"{{test-user-id}}\",\r\n    \"bars\": \"{{test-bar-id}}\",\r\n    \"drinkQuality\": 5,\r\n    \"drinkPrice\": 5,\r\n    \"atmosphere\": 4,\r\n    \"foodQuality\": 4,\r\n    \"comment\": \"Practically got free stuff when I told them I was American and would sing any song. 10/10\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "filter-and-sort-reviews",
			"item": [
				{
					"name": "filter-by-name-asc",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10b0c4f5-e2cc-467d-ac63-20a8ac54b682",
								"exec": [
									"pm.test(\"Sort bars by name aA-zZ\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0].name).to.eql('00test-bar-123');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars?sortByName=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars"
							],
							"query": [
								{
									"key": "sortByName",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "filter-by-name-desc",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "16643507-7b24-4bc9-aa83-b90ac5012e53",
								"exec": [
									"pm.test(\"Sort bars by name Zz-Aa\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0].name).to.eql('ÖÖtest-bar-123');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars?sortByName=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars"
							],
							"query": [
								{
									"key": "sortByName",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-drink-quality",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e07e0088-2528-4eb7-803d-3096be30cd1c",
								"exec": [
									"pm.test(\"Get highest drink quality review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-high-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByDrinkQuality=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByDrinkQuality",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-drink-price",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f28e7896-f983-4b45-85d6-f1a7bb19f184",
								"exec": [
									"pm.test(\"Get highest drink price review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-high-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByDrinkPrice=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByDrinkPrice",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-food-quality",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "29174b1e-e2cd-4d33-84a2-6d1434daf959",
								"exec": [
									"pm.test(\"Get highest food quality review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-high-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByFoodQuality=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByFoodQuality",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-atmosphere",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b92ce8ed-7404-4b05-8c9e-2d8660415920",
								"exec": [
									"pm.test(\"Get highest atmosphere review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-high-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByAtmosphere=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByAtmosphere",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-average-rating",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64f483f8-5a3a-4516-b46c-e10d27004421",
								"exec": [
									"pm.test(\"Get highest average rating review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-high-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByAverageRating=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByAverageRating",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-drink-quality-lowest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6790d09c-db73-4ede-a366-83f23e5b94e8",
								"exec": [
									"pm.test(\"Get lowest drink quality review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-low-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByDrinkQuality=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByDrinkQuality",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-drink-price-lowest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39550e1f-a19e-4a67-9b29-08c8397520cc",
								"exec": [
									"pm.test(\"Get lowest drink price review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-low-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByDrinkPrice=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByDrinkPrice",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-food-quality-lowest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08a33479-0438-4150-9781-69092d45e83c",
								"exec": [
									"pm.test(\"Get lowest food quality review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-low-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByFoodQuality=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByFoodQuality",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-atmosphere-lowest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05978e80-aaa7-40eb-b6af-7d4973f27e66",
								"exec": [
									"pm.test(\"Get lowest atmosphere review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-low-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByAtmosphere=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByAtmosphere",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-average-rating-lowest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "704bf90c-6bba-45af-9d62-3f6ee0dbacc0",
								"exec": [
									"pm.test(\"Get lowest average rating review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-low-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByAverageRating=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByAverageRating",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "filter-bar-by-partial-name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "760581f0-43b3-4f15-b4e0-c9bafe3735a1",
								"exec": [
									"pm.test(\"Filter bar by partial name\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0].name).to.eql('ÖÖtest-bar-123');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars?name=ÖÖ",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars"
							],
							"query": [
								{
									"key": "name",
									"value": "ÖÖ"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "update-all-test-entities",
			"item": [
				{
					"name": "update-test-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6465d84f-c1f7-4950-8968-34b3a812c371",
								"exec": [
									"pm.test(\"Update test user username\", function() {",
									"    pm.expect(pm.response).to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"new-username\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/{{test-user-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{test-user-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update-test-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0d2ebdf-0613-4c43-ab81-9dbfa253d042",
								"exec": [
									"pm.test(\"Update test bar\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"new-bar-123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update-test-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c9398ea-9982-4798-9559-33611a8a0b8e",
								"exec": [
									"pm.test(\"Update review\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"atmosphere\": 4,\r\n    \"foodQuality\": 5,\r\n    \"drinkPrice\": 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/reviews/{{test-review-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-review-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update-test-event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df243d0d-2aec-4c0b-8eed-490adcdfbbb0",
								"exec": [
									"pm.test(\"Update test event\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Don't tell Dave!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/events/{{test-event-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"{{test-event-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4b5c229-aa9d-469e-8274-867b772bf23d",
								"exec": [
									"pm.test(\"Put new password on user\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"isVerified\": false,\r\n    \"reviews\": [],\r\n    \"_id\": \"5f6c70112cea2e1fac80129a\",\r\n    \"username\": \"testuser123\",\r\n    \"password\": \"somethingelse\",\r\n    \"email\": \"test@pubcrawl.se\",\r\n    \"createdAt\": \"2020-09-24T10:08:17.250Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/{{test-user-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{test-user-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-updated-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2703eae3-cee7-4366-868f-5af09484372b",
								"exec": [
									"pm.test(\"Get test user\", function() {",
									"    const response = pm.response.json();",
									"    pm.expect(pm.response).to.have.status(200);",
									"    pm.expect(pm.response.responseTime).to.be.below(100);",
									"    pm.expect(response.username).to.eql('new-username');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{test-user-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{test-user-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-updated-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2bf6312-f291-44d6-8e60-a75ce26663aa",
								"exec": [
									"pm.test(\"Get bar by ID\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response.name).to.eql('new-bar-123');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-updated-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "542c3815-196d-411d-9503-7c9c682f0001",
								"exec": [
									"pm.test(\"Get updated test review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response.atmosphere).to.eql(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-review-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-review-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-updated-event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "400f8cd6-6fc2-4af8-85ce-8f361f9ca405",
								"exec": [
									"pm.test(\"Get updated bar\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response.title).to.eql('Don\\'t tell Dave!');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/events/{{test-event-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"{{test-event-id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "cleanup",
			"item": [
				{
					"name": "delete-low-review-through-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5cb98fdc-dd02-45dc-a83f-81d193eb13f6",
								"exec": [
									"pm.test(\"Delete review through bar by id\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews/{{test-low-review}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews",
								"{{test-low-review}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-mid-review",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-mid-review}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-mid-review}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-high-review",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-high-review}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-high-review}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-test-event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0aec5883-5ad9-4db2-9764-27ccae8261d1",
								"exec": [
									"pm.test(\"Delete test event\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/events/{{test-event-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"{{test-event-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-test-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "38783f34-8a02-434a-8ea9-580c37673115",
								"exec": [
									"pm.test(\"Delete test review\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-review-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-review-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-test-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a2673bb-613e-4208-b562-408393c4a16f",
								"exec": [
									"pm.test(\"Delete test bar\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-test-bar2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7b0bbf6-5cad-49e6-8095-25f372ae2966",
								"exec": [
									"pm.test(\"Delete test bar2\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id2}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-test-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed5d8a98-304b-4836-aeab-32aecd999ca7",
								"exec": [
									"pm.test(\"Delete test user\", function() {",
									"    pm.expect(pm.response).to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{test-user-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{test-user-id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "dad31082-b21a-4ea6-b829-2ee335dfff33",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "999594e6-8591-4d4a-8d95-e250dd180b14",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "cd185905-a834-4211-8030-583d17702534",
			"key": "host",
			"value": "http://localhost:3000",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}