{
	"info": {
		"_postman_id": "cbb102e1-0154-482e-b215-4847a5a925e0",
		"name": "g20-pubcrawl",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create-test-entities",
			"item": [
				{
					"name": "add-test-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "23937317-542d-42de-bc2f-a5cee21f4afc",
								"exec": [
									"pm.test(\"Successfully add user\", function() {",
									"    pm.expect(pm.response).to.be.status(201);",
									"    const response = pm.response.json();",
									"    pm.globals.set(\"test-user-id\", response._id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser123\",\n    \"password\": \"password1234\",\n    \"email\": \"test@pubcrawl.se\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-test-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "252d7250-61d5-4b78-a58d-beea10be0af2",
								"exec": [
									"pm.test(\"Successfully add bar\", function() {\r",
									"    pm.expect(pm.response).to.be.status(201);\r",
									"    const response = pm.response.json();\r",
									"    pm.globals.set(\"test-bar-id\", response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ZZtest-bar-123\",\r\n    \"latLong\": [12.345, 54.321]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/bars",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-test-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e6da14c9-8876-4dee-bbb2-ac6b1ced0327",
								"exec": [
									"pm.test(\"Add a test review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(201);\r",
									"    pm.expect(response.drinkQuality).to.eql(4);\r",
									"    pm.expect(response.comment).to.be.a('String');\r",
									"    pm.globals.set('test-review-id', response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"users\": \"{{test-user-id}}\",\r\n    \"bars\": \"{{test-bar-id}}\",\r\n    \"drinkQuality\": 4,\r\n    \"drinkPrice\": 4,\r\n    \"comment\": \"This comment is just a test comment. Nothing fancy. Chris O'Neill is pretty cool.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-new-event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d906c90-c477-4e36-ab40-da34beb815dc",
								"exec": [
									"pm.test(\"Successfully add user\", function() {\r",
									"    pm.expect(pm.response).to.be.status(201);\r",
									"    const response = pm.response.json();\r",
									"    pm.globals.set(\"test-event-id\", response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"users\": \"{{test-user-id}}\",\r\n    \"bars\": \"{{test-bar-id}}\",\r\n    \"title\": \"Get together at Test Bar 123\",\r\n    \"startDate\": \"2020-09-20T20:00:00\",\r\n    \"endDate\": \"2020-09-21T01:00:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/events",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all-users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5ff27a5e-5c42-4d15-8fa4-1c36649261f6",
								"exec": [
									"pm.test(\"Get all users\", function() {",
									"    pm.expect(pm.response).to.have.status(200);",
									"});",
									"",
									"pm.test(\"Get all users under 150ms\", function() {",
									"    pm.expect(pm.response.responseTime).to.be.below(150);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-test-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "91924fe5-a47a-4aae-a450-af2b5cb4964d",
								"exec": [
									"pm.test(\"Get test user\", function() {",
									"    const response = pm.response.json();",
									"    pm.expect(pm.response).to.have.status(200);",
									"    pm.expect(pm.response.responseTime).to.be.below(100);",
									"    pm.expect(response.username).to.eql('testuser123');",
									"    pm.expect(response.email).to.eql('test@pubcrawl.se');",
									"    pm.expect(response.isVerified).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{test-user-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{test-user-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all-bars",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1e2bfb38-703a-4461-9811-72a561fd3c3b",
								"exec": [
									"pm.test(\"Get all bars\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-test-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93dc8fea-01d3-446e-90df-1194378c30a1",
								"exec": [
									"pm.test(\"Get bar by ID\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response.name).to.eql('ZZtest-bar-123');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all-reviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e50b491c-9d15-45bc-8d34-32e1db0c31c1",
								"exec": [
									"pm.test(\"Get all reviews\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-test-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aaaef510-66b5-4af1-8482-56d130e197ce",
								"exec": [
									"pm.test(\"Get review by id\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response.drinkQuality).to.be.a('Number');\r",
									"    pm.expect(response.drinkPrice).to.eql(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-review-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-review-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-review-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "34925ba4-4551-4441-9c84-905f675c81ce",
								"exec": [
									"pm.test(\"Get user that posted review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response._id).to.eql(pm.globals.get('test-user-id'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-review-id}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-review-id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-review-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a5a7d4e-ba86-403c-b0e2-5167b15f4b3f",
								"exec": [
									"pm.test(\"Get user that posted review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response._id).to.eql(pm.globals.get('test-bar-id'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-review-id}}/bars",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-review-id}}",
								"bars"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all-events",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c64d8a46-53cf-4727-b3ca-12fdb0643955",
								"exec": [
									"pm.test(\"Get all events\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/events",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-test-event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a84a6cb7-983b-4582-971d-35a35697cd17",
								"exec": [
									"pm.test(\"Successfully add user\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.be.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/events/{{test-event-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"{{test-event-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-test-event-bars",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f6aee72-c5aa-43bf-ae05-20007f106864",
								"exec": [
									"pm.test(\"Get all bars for event\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-bar-id'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/events/{{test-event-id}}/bars",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"{{test-event-id}}",
								"bars"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-test-event-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9c1e222e-e3c9-41f9-abcc-fa66ed19057a",
								"exec": [
									"pm.test(\"Get user that posted the event\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response._id).to.eql(pm.globals.get('test-user-id'));\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/events/{{test-event-id}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"{{test-event-id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-low-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e343925e-0124-4246-a1dd-2b66353c0b7f",
								"exec": [
									"pm.test(\"Create low rating review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(201);\r",
									"    pm.globals.set('test-low-review', response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"users\": \"{{test-user-id}}\",\r\n    \"bars\": \"{{test-bar-id}}\",\r\n    \"drinkQuality\": 1,\r\n    \"drinkPrice\": 1,\r\n    \"atmosphere\": 3,\r\n    \"comment\": \"I'm angry and give this bar low reviews. >:(\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-avg-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "49a07a84-57ff-4f23-b85b-749c386da333",
								"exec": [
									"pm.test(\"Create mid rating review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(201);\r",
									"    pm.globals.set('test-mid-review', response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"users\": \"{{test-user-id}}\",\r\n    \"bars\": \"{{test-bar-id}}\",\r\n    \"drinkQuality\": 3,\r\n    \"drinkPrice\": 4,\r\n    \"atmosphere\": 3,\r\n    \"foodQuality\": 3,\r\n    \"comment\": \"I enjoyed my time here, nice and chill.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "add-high-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6bc28a1f-a6c2-4c58-8d52-884b2e58581c",
								"exec": [
									"pm.test(\"Create high rating review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(201);\r",
									"    pm.globals.set('test-high-review', response._id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"users\": \"{{test-user-id}}\",\r\n    \"bars\": \"{{test-bar-id}}\",\r\n    \"drinkQuality\": 5,\r\n    \"drinkPrice\": 5,\r\n    \"atmosphere\": 4,\r\n    \"foodQuality\": 4,\r\n    \"comment\": \"Practically got free stuff when I told them I was American and would sing any song. 10/10\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "filter-and-sort-reviews",
			"item": [
				{
					"name": "filter-by-name-asc",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ae6bb67-6ba3-410f-be82-bd3bb80c2a9c",
								"exec": [
									"pm.test(\"Sort bars by name aA-zZ\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[response.length-1].name).to.eql('ZZtest-bar-123');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars?sortByName=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars"
							],
							"query": [
								{
									"key": "sortByName",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "filter-by-name-desc",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "53f4c9e2-bd57-410f-9d37-9bd87d3ee193",
								"exec": [
									"pm.test(\"Sort bars by name Zz-Aa\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0].name).to.eql('ZZtest-bar-123');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars?sortByName=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars"
							],
							"query": [
								{
									"key": "sortByName",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-drink-quality",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ebda742-a8e6-40fd-828e-da3ceacc838f",
								"exec": [
									"pm.test(\"Get highest drink quality review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-high-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByDrinkQuality=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByDrinkQuality",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-drink-price",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e6e3b552-65e3-4a46-bce0-fa620a9eead4",
								"exec": [
									"pm.test(\"Get highest drink price review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-high-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByDrinkPrice=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByDrinkPrice",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-food-quality",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f79e9b51-6067-4a15-b2ea-fb8c5a865722",
								"exec": [
									"pm.test(\"Get highest food quality review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-high-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByFoodQuality=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByFoodQuality",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-atmosphere",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19b45713-056a-49fa-a1ae-fdf9d222c8e2",
								"exec": [
									"pm.test(\"Get highest atmosphere review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-high-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByAtmosphere=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByAtmosphere",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-average-rating",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0011469-9c80-4666-aba3-90cc064e5da2",
								"exec": [
									"pm.test(\"Get highest average rating review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-high-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByAverageRating=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByAverageRating",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-drink-quality-lowest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c083bf4-ada0-4745-9913-de2f6fbbc046",
								"exec": [
									"pm.test(\"Get lowest drink quality review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-low-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByDrinkQuality=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByDrinkQuality",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-drink-price-lowest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6eb91c6b-29c5-4888-8165-596373e8842b",
								"exec": [
									"pm.test(\"Get lowest drink price review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-low-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByDrinkPrice=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByDrinkPrice",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-atmosphere-lowest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9dbf1769-5201-4bd1-b7c6-0246450f2a10",
								"exec": [
									"pm.test(\"Get lowest atmosphere review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-low-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByAtmosphere=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByAtmosphere",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-food-quality-lowest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f973d100-0864-4403-baac-909eb186df0a",
								"exec": [
									"pm.test(\"Get lowest food quality review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-low-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByFoodQuality=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByFoodQuality",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "sort-by-average-rating-lowest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02dc6127-b1ae-444b-bc36-ffa62aca008a",
								"exec": [
									"pm.test(\"Get lowest average rating review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0]._id).to.eql(pm.globals.get('test-low-review'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}/reviews?sortByAverageRating=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}",
								"reviews"
							],
							"query": [
								{
									"key": "sortByAverageRating",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "filter-bar-by-partial-name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "847ec0f6-f389-45ad-b673-cf73f166f648",
								"exec": [
									"pm.test(\"Filter bar by partial name\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response[0].name).to.eql('ZZtest-bar-123');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars?name=123",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars"
							],
							"query": [
								{
									"key": "name",
									"value": "123"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "update-all-test-entities",
			"item": [
				{
					"name": "update-test-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04cd27b0-a00f-44a4-bbc3-751760224c73",
								"exec": [
									"pm.test(\"Update test user username\", function() {",
									"    pm.expect(pm.response).to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"new-username\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/{{test-user-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{test-user-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update-test-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73b8490c-5938-4a53-ba97-ed5c4415e0f4",
								"exec": [
									"pm.test(\"Update test bar\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"new-bar-123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update-test-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac79ae72-8e62-4993-80be-506101ef418a",
								"exec": [
									"pm.test(\"Update review\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"atmosphere\": 4,\r\n    \"foodQuality\": 5,\r\n    \"drinkPrice\": 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/reviews/{{test-review-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-review-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update-test-event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "593ea96b-c072-4504-bbf6-3324386b5bc0",
								"exec": [
									"pm.test(\"Update test event\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Don't tell Dave!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/events/{{test-event-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"{{test-event-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-updated-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b8f17d52-2381-40f1-a1ef-a0ee33d229da",
								"exec": [
									"pm.test(\"Get test user\", function() {",
									"    const response = pm.response.json();",
									"    pm.expect(pm.response).to.have.status(200);",
									"    pm.expect(pm.response.responseTime).to.be.below(100);",
									"    pm.expect(response.username).to.eql('new-username');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{test-user-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{test-user-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-updated-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "950715ff-d02e-49c8-8317-98c5cfa9db63",
								"exec": [
									"pm.test(\"Get bar by ID\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response.name).to.eql('new-bar-123');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-updated-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "692b53b9-86eb-4fc5-b83c-f708a2919332",
								"exec": [
									"pm.test(\"Get updated test review\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response.atmosphere).to.eql(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-review-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-review-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-updated-event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "26130e08-4123-4997-b42f-b99126fd5d6e",
								"exec": [
									"pm.test(\"Get updated bar\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"    pm.expect(response.title).to.eql('Don\\'t tell Dave!');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/events/{{test-event-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"{{test-event-id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "delete-all-test-entities",
			"item": [
				{
					"name": "delete-test-event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1eda590a-b84c-4910-8189-e4508dff1148",
								"exec": [
									"pm.test(\"Delete test event\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/events/{{test-event-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"{{test-event-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-test-review",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c33f1709-2a3c-48b5-ba56-faccdcc12e8c",
								"exec": [
									"pm.test(\"Delete test review\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-review-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-review-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-test-bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e946165d-1e77-4e25-98dd-a70a4cacde5e",
								"exec": [
									"pm.test(\"Delete test bar\", function() {\r",
									"    pm.expect(pm.response).to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{test-bar-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{test-bar-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-test-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cb62753a-2d68-48d3-8a59-16a145e675cf",
								"exec": [
									"pm.test(\"Delete test user\", function() {",
									"    pm.expect(pm.response).to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/{{test-user-id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{test-user-id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "cleanup",
			"item": [
				{
					"name": "delete-low-review",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-low-review}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-low-review}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-mid-review",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-mid-review}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-mid-review}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-high-review",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews/{{test-high-review}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"{{test-high-review}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "a355c354-4e7f-4712-aab0-993bd0197182",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "19ee7240-f93c-40e9-9640-9bb886e5f972",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "cd185905-a834-4211-8030-583d17702534",
			"key": "host",
			"value": "http://localhost:3000",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}